---

# to verify ufw configuration run:
# sudo ufw status verbose

- name: Install ufw
  apt: package=ufw state=present

- name: Configure ufw incoming defaults to {{default_ufw_default_inbound_rule}}
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'incoming', policy: '{{default_ufw_default_inbound_rule}}' }
  notify:
    - restart ufw

- name: Configure ufw ougoing defaults to {{default_ufw_default_outbound_rule}}
  ufw: direction={{ item.direction }} policy={{ item.policy }}
  with_items:
    - { direction: 'outgoing', policy: '{{default_ufw_default_outbound_rule}}' }
  notify:
    - restart ufw

# These are VERY verbose, so that even if you decide to block outgoing traffic, things will still work.
- name: Configure ufw rules for Docker, Docker swarm and SENSIBLE basic services
  ufw: "{{item}}"
  with_items:
    - { rule: 'limit', port: '{{ ssh_port | default("22") }}', proto: 'tcp' }
    # https://docs.docker.com/engine/swarm/swarm-tutorial/#open-protocols-and-ports-between-the-hosts
    - { rule: 'allow', port: '2377', proto: 'tcp' }       ## for cluster management communications -- ONLY NEEDED ON MANAGERS - TODO, REMOVE ON NON MANAGER NODES
    - { rule: 'allow', port: '7946' }                     ## for communication among nodes
    - { rule: 'allow', port: '4789', proto: 'udp' }       ## for overlay network traffic
    # https://www.digitalocean.com/community/tutorials/how-to-configure-the-linux-firewall-for-docker-swarm-on-ubuntu-16-04
    - { rule: 'allow', port: '2376', proto: 'tcp' }       ## for secure Docker client communication. This port is required for Docker Machine to work. Docker Machine is used to orchestrate Docker hosts.
    # BASIC SERVICES
    - { rule: 'allow', port: '50' }                       ## IP sec ESP
    - { rule: 'allow', port: '53' }                       ## For DNS
    - { rule: 'allow', port: 'http' }                     ## For HTTP
    - { rule: 'allow', port: 'https' }                    ## For HTTPS
    - { rule: 'allow', port: '9001'}                      ## For Portainer node communication
  notify:
    - restart ufw

- name: Configure ufw rules for additional services if provided
  ufw: "{{item}}"
  with_items: "{{ ufw_extra_rules | default([]) }}"
  notify:
    - restart ufw

- name: Enable ufw logging
  ufw: logging=on
  notify:
    - restart ufw

- name: Enable ufw
  ufw: state=enabled
